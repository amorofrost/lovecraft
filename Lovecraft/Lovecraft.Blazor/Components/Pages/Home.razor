@page "/"
@inject NavigationManager Navigation
@inject Lovecraft.Blazor.Services.AuthService AuthService

<PageTitle>Home</PageTitle>

@if (loading)
{
	<p>Loading...</p>
}
else if (AuthService.IsAuthenticated)
{
	@* If already signed in, redirect to profile *@
	@code { protected override void OnAfterRender(bool firstRender) { if (firstRender) Navigation.NavigateTo("/profile"); } }
}
else
{
	<h3>Sign in</h3>

	@if (!string.IsNullOrEmpty(error))
	{
		<p style="color:red">@error</p>
	}

	<div>
		<div><label>Login: <input @bind="model.Username" /></label></div>
		<div><label>Password: <input type="password" @bind="model.Password" /></label></div>
		<div>
			<button @onclick="OnLogin">Sign in</button>
			<a href="/register" style="margin-left:1rem">Create account</a>
		</div>
	</div>
}

@code {
	private bool loading = true;
	private string? error;
	private LoginModel model = new();

	private class LoginModel { public string Username { get; set; } = string.Empty; public string Password { get; set; } = string.Empty; }

	protected override async Task OnInitializedAsync()
	{
		// ensure auth service initialized
		try { await AuthService.InitializeAsync(); } catch { }
		loading = false;
	}

	private async Task OnLogin()
	{
		error = null;
		var ok = await AuthService.SignInAsync(model.Username, model.Password);
		if (ok)
		{
			Navigation.NavigateTo("/profile");
		}
		else
		{
			error = "Invalid username or password";
		}
	}
}
